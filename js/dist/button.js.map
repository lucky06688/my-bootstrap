{"version":3,"sources":["../src/button.js"],"names":["NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","fn","ClassName","ACTIVE","BUTTON","FOCUS","Selector","DATA_TOGGLE_CARROT","DATA_TOGGLE","INPUT","INPUT_CHECKBOX_RADIO","Event","CLICK_DATA_API","FOCUS_BLUR_DATA_API","Button","element","_element","toggle","triggerChangeEvent","addAriaPressed","rootElement","closest","input","querySelector","type","checked","classList","contains","activeElement","removeClass","hasAttribute","trigger","focus","setAttribute","toggleClass","dispose","removeData","_jQueryInterface","config","each","data","document","on","event","target","is","preventDefault","button","call","test","Constructor","noConflict"],"mappings":"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","sourcesContent":["import $ from 'jquery';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NAME = 'button';\r\nconst VERSION = '1.0.0';\r\nconst DATA_KEY = 'bs.button';\r\nconst EVENT_KEY = `.${DATA_KEY}`;\r\nconst DATA_API_KEY = '.data-api';\r\nconst JQUERY_NO_CONFLICT = $.fn[NAME];\r\n\r\nconst ClassName = {\r\n  ACTIVE : 'active',\r\n  BUTTON : 'btn',\r\n  FOCUS : 'focus'\r\n};\r\n\r\nconst Selector = {\r\n  DATA_TOGGLE_CARROT : '[data-toggle^=\"button\"]',\r\n  DATA_TOGGLE : '[data-toggle=\"buttons\"]',\r\n  ACTIVE : '.active',\r\n  BUTTON : '.btn',\r\n  INPUT: 'input:not([type=\"hidden\"])',\r\n  INPUT_CHECKBOX_RADIO: 'input[type=\"checkbox\"], input[type=\"radio\"]'\r\n};\r\n\r\nconst Event = {\r\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`,\r\n  FOCUS_BLUR_DATA_API: `focus${EVENT_KEY}${DATA_API_KEY} ` + \r\n                         `blur${EVENT_KEY}${DATA_API_KEY}`\r\n};\r\n\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Class Definition\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nclass Button {\r\n  constructor(element) {\r\n    this._element = element;\r\n  }\r\n\r\n  //  Getters\r\n  static get VERSION() {\r\n    return VERSION;\r\n  }\r\n\r\n  // Public\r\n  toggle() {\r\n    let triggerChangeEvent = true;\r\n    let addAriaPressed = true;\r\n    const rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\r\n\r\n    if (rootElement) {\r\n      const input = this._element.querySelector(Selector.INPUT);\r\n\r\n      if (input) {\r\n        if (input.type === 'radio') {\r\n          if (input.checked && this._element.classList.contains(ClassName.ACTIVE)) {\r\n            triggerChangeEvent = false;\r\n          } else {\r\n            const activeElement = rootElement.querySelector(Selector.ACTIVE);\r\n\r\n            if (activeElement) {\r\n              $(activeElement).removeClass(ClassName.ACTIVE);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (triggerChangeEvent) {\r\n          if (input.hasAttribute('disabled') ||\r\n              rootElement.hasAttribute('disabled') ||\r\n              input.classList.contains('disabled') ||\r\n              rootElement.classList.contains('disabled')) {\r\n            return; \r\n          }\r\n          input.checked = !this._element.classList.contains(ClassName.ACTIVE);\r\n          $(input).trigger('change');\r\n        }\r\n\r\n        input.focus();\r\n        addAriaPressed = false;\r\n      }\r\n    }\r\n\r\n    if (addAriaPressed) {\r\n      this._element.setAttribute('aria-pressed',\r\n        !this._element.classList.contains(ClassName.ACTIVE));\r\n    }\r\n\r\n    if (triggerChangeEvent) {\r\n      $(this._element).toggleClass(ClassName.ACTIVE);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    $.removeData(this._element, DATA_KEY);\r\n    this._element = null;\r\n  }\r\n\r\n  static _jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = $(this).data(DATA_KEY);\r\n\r\n      if (!data) {\r\n        data = new Button(this);\r\n        $(this).data(DATA_KEY, data);\r\n      }\r\n\r\n      if (config === 'toggle' || config === 'dispose') {\r\n        data[config]();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n$(document)\r\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\r\n    if (!$(event.target).is(Selector.INPUT_CHECKBOX_RADIO)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const button = $(event.target).closest(Selector.BUTTON)[0];\r\n    Button._jQueryInterface.call($(button), 'toggle');\r\n  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\r\n    const button = $(event.target).closest(Selector.BUTTON)[0];\r\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\r\n  });\r\n\r\n$.fn[NAME] = Button._jQueryInterface;\r\n$.fn[NAME].Constructor = Button;\r\n$.fn[NAME].noConflict = () => {\r\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\r\n  return Button._jQueryInterface;\r\n};\r\n\r\nexport default Button;\r\n"],"file":"button.js"}